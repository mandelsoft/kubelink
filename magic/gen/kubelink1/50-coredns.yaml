---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubelink-coredns
  namespace: kubelink
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubelink:coredns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: kubelink-coredns
  namespace: kubelink
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kubelink-coredns
  name: kubelink-dns
  namespace: kubelink
spec:
  clusterIP: 100.64.0.11
  ports:
  - name: dns
    port: 53
    protocol: UDP
    targetPort: 8053
  - name: dns-tcp
    port: 53
    protocol: TCP
    targetPort: 8053
  - name: metrics
    port: 9153
    protocol: TCP
    targetPort: 9153
  selector:
    app: kubelink-coredns
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kubelink-coredns
  name: kubelink-coredns
  namespace: kubelink
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: kubelink-coredns
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app: kubelink-coredns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: eu.gcr.io/sap-se-gcr-k8s-public/coredns/coredns:1.6.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 8053
          name: dns-udp
          protocol: UDP
        - containerPort: 8053
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 250m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 15Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/coredns
          name: secret-volume
          readOnly: true
      dnsPolicy: Default
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: kubelink-coredns
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - name: secret-volume
        secret:
          defaultMode: 420
          items:
          - key: Corefile
            path: Corefile
          - key: kubeconfig
            path: kubeconfig
          secretName: kubelink-coredns
